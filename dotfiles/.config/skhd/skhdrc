#  A list of all built-in modifier and literal keywords can
#  be found at https://github.com/koekeishiya/skhd/issues/1
#  Cross-check new keybinds with https://support.apple.com/en-us/102650
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
:: default : borders active_color=0xffe1e3e4; #yabai -m config window_active_color 0xffe1e3e4
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : yabai -m config active_window_border_color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
.blacklist [
    "Steam"
    "Dota 2"
]

# open terminal, blazingly fast compared to iTerm/Hyper
# for now dont use kitty (maybe in the future)
# cmd - return : /Applications/kitty.app/Contents/MacOS/kitty --single-instance -d ~
cmd - return : open -n /Applications/iTerm.app

# restart yabai
hyper - r : yabai --restart-service | yabai -m rule --apply

# focus window
cmd - 0x2C : yabai -m window --focus recent   # cmd + /
cmd - h : yabai -m window --focus west || yabai -m display --focus west
cmd - j : yabai -m window --focus south || yabai -m display --focus south
cmd - k : yabai -m window --focus north || yabai -m display --focus north
cmd - l : yabai -m window --focus east || yabai -m display --focus east
cmd - 0x29 : yabai -m window --focus stack.prev # cmd + ;
cmd - 0x27 : yabai -m window --focus stack.next # cmd + '

# swap window (fancy move)
cmd + shift - h : yabai -m window --swap west  || $(yabai -m window --display west; yabai -m display --focus west)
cmd + shift - j : yabai -m window --swap south || $(yabai -m window --display south; yabai -m display --focus south)
cmd + shift - k : yabai -m window --swap north || $(yabai -m window --display north; yabai -m display --focus north)
cmd + shift - l : yabai -m window --swap east  || $(yabai -m window --display east; yabai -m display --focus east)

# minimize selected window
cmd - m : yabai -m window --minimize
# deminimize last minimized window (top of the stack minimized windows stack)
cmd + shift - m : yabai -m window --deminimize "$(yabai -m query --windows | jq '[.[] | select(."is-minimized" == true) | .id] | last // -1')"

# fast focus desktop
ctrl - 1 : yabai -m space --focus  1 || skhd -k "ctrl + alt + cmd - 1"
ctrl - 2 : yabai -m space --focus  2 || skhd -k "ctrl + alt + cmd - 2"
ctrl - 3 : yabai -m space --focus  3 || skhd -k "ctrl + alt + cmd - 3"
ctrl - 4 : yabai -m space --focus  4 || skhd -k "ctrl + alt + cmd - 4"
ctrl - 5 : yabai -m space --focus  5 || skhd -k "ctrl + alt + cmd - 5"
ctrl - 6 : yabai -m space --focus  6 || skhd -k "ctrl + alt + cmd - 6"
ctrl - 7 : yabai -m space --focus  7 || skhd -k "ctrl + alt + cmd - 7"
ctrl - 8 : yabai -m space --focus  8 || skhd -k "ctrl + alt + cmd - 8"
ctrl - 9 : yabai -m space --focus  9 || skhd -k "ctrl + alt + cmd - 9"
ctrl - 0 : yabai -m space --focus 10 || skhd -k "ctrl + alt + cmd - 0"

# send window to desktop and follow focus
shift + ctrl - 1 : yabai -m window --space  1 && yabai -m space --focus 1
shift + ctrl - 2 : yabai -m window --space  2 && yabai -m space --focus 2
shift + ctrl - 3 : yabai -m window --space  3 && yabai -m space --focus 3
shift + ctrl - 4 : yabai -m window --space  4 && yabai -m space --focus 4
shift + ctrl - 5 : yabai -m window --space  5 && yabai -m space --focus 5
shift + ctrl - 6 : yabai -m window --space  6 && yabai -m space --focus 6
shift + ctrl - 7 : yabai -m window --space  7 && yabai -m space --focus 7
shift + ctrl - 8 : yabai -m window --space  8 && yabai -m space --focus 8
shift + ctrl - 9 : yabai -m window --space  9 && yabai -m space --focus 9
shift + ctrl - 0 : yabai -m window --space 10 && yabai -m space --focus 10

# move (free floating) window
shift + ctrl - a : yabai -m window --move rel:-20:0
shift + ctrl - s : yabai -m window --move rel:0:20
shift + ctrl - w : yabai -m window --move rel:0:-20
shift + ctrl - d : yabai -m window --move rel:20:0

# toggle window fullscreen zoom
alt + cmd - f : yabai -m window --toggle zoom-fullscreen

# toggle window native fullscreen
alt - f : yabai -m window --toggle native-fullscreen

# float / unfloat window and restore position
ctrl + cmd - t : yabai -m window --toggle float --grid 4:4:1:1:2:2

# defines a new mode 'layout'
:: layout @ : borders active_color=0xffffbd44 # minimize yellow color
# from 'default' mode activate mode 'layout'
ctrl + cmd - l ; layout
# from 'layout' mode activate mode 'default'
layout < escape ; default
# change layout of desktop
layout < b : yabai -m space --layout bsp
layout < f : yabai -m space --layout float
layout < s : yabai -m space --layout stack
# rotate bsp tree
layout < r : yabai -m space --rotate 90
# mirror tree y-axis
layout < y : yabai -m space --mirror y-axis
# mirror tree x-axis
layout < x : yabai -m space --mirror x-axis
# toggle window split type
layout < e : yabai -m window --toggle split

# defines a new mode 'resize'
:: resize @ : borders active_color=0xff00ca4e # maximize green color
# from 'default' mode, activate mode 'resize'
ctrl + cmd - r ; resize 
# from 'resize' mode, activate mode 'default'
resize < escape ; default
# equalize windows
resize < b : yabai -m space --balance
# preferred resizing behaviour
# (https://github.com/koekeishiya/yabai/issues/200#issuecomment-1655195085)
resize < h : yabai -m window --resize right:-20:0 2> /dev/null || yabai -m window --resize left:-20:0 2> /dev/null
resize < j : yabai -m window --resize bottom:0:20 2> /dev/null || yabai -m window --resize top:0:20 2> /dev/null
resize < k : yabai -m window --resize bottom:0:-20 2> /dev/null || yabai -m window --resize top:0:-20 2> /dev/null
resize < l : yabai -m window --resize right:20:0 2> /dev/null || yabai -m window --resize left:20:0 2> /dev/null
